@model EntityDeleteModel
@{
    Layout = "~/Areas/IlaroAdmin/Views/Shared/_Layout.cshtml";
    ViewBag.Title = string.Format(IlaroAdminResources.Delete_Title, Model.EntityRecord.Entity.Name);
}

@section Breadcrumb
{
    <ul class="breadcrumb">
        <li>@Html.ActionLink(IlaroAdminResources.Index_Title, "Index", "Group", new { area = "IlaroAdmin" }, null)</li>
        <li>@Html.ActionLink(Model.EntityRecord.Entity.Verbose.Group, "Details", "Group", new { area = "IlaroAdmin", groupName = Model.EntityRecord.Entity.Verbose.Group }, null)</li>
        <li>@Html.ActionLink(Model.EntityRecord.Entity.Verbose.Plural, "Index", "Entities", new { area = "IlaroAdmin", entityName = Model.EntityRecord.Entity.Name }, null)</li>
        <li class="active">@string.Format(IlaroAdminResources.Delete_Title, Model.EntityRecord.Entity.Name)</li>
    </ul>
}

<h2>@Model.EntityRecord.Entity.Verbose.Singular - @Model.EntityRecord.ToString()</h2>

@using (Html.BeginForm("Delete", "Entity", new { area = "IlaroAdmin" }, FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()
    @Html.Hidden("EntityName", Model.EntityRecord.Entity.Name)
    @Html.Hidden("Key", Model.EntityRecord.JoinedKeyValue)

    <div class="form-group">
        <div class="col-md-3">
            @IlaroAdminResources.DeleteText
        </div>
    </div>

    for (int i = 0; i < Model.PropertiesDeleteOptions.Count; i++)
    {
        <div class="form-group" data-delete-options="@Model.PropertiesDeleteOptions[i].HierarchyName" @HideDeleteOption(Model.PropertiesDeleteOptions[i].Collapsed)>
            <label for="@Html.IdFor(m => Model.PropertiesDeleteOptions[i].DeleteOption)" class="control-label col-md-2">@Model.PropertiesDeleteOptions[i].EntityName</label>
            <div class="col-md-3">
                @Html.HiddenFor(m => Model.PropertiesDeleteOptions[i].HierarchyName)
                @if (Model.PropertiesDeleteOptions[i].ShowOptions)
                {
                    @Html.DropDownListFor(m => Model.PropertiesDeleteOptions[i].DeleteOption, Model.PropertiesDeleteOptions[i].DeleteOption.GetSelectList(), new { @class = "form-control" })
                }
                else
                {
                    <div class="control-value">
                        @Model.PropertiesDeleteOptions[i].DeleteOption.ToString().SplitCamelCase()
                    </div>
                }
            </div>
        </div>
    }

    if (Model.DisplayRecordHierarchy)
    {
        <h4>@DeleteHierarchyWarning(Model.AssumableDeleteHierarchyWarning)</h4>
        <div class="list-delete-wrapper">
            <ul class="list-delete">
                @DisplayRecordHierarchy(Model.RecordHierarchy)
            </ul>
        </div>
    }

    <div class="form-action">
        <div class="col-md-offset-2">
            <button type="submit" class="btn btn-primary">@IlaroAdminResources.Delete</button>
            <a href="@Url.Action("Edit")" class="btn btn-default"><i class="glyphicon glyphicon-edit"></i> @IlaroAdminResources.Edit</a>
            <a href="@Url.Action("Index", "Entities", new { area = "IlaroAdmin" }, null)" class="btn btn-link">@IlaroAdminResources.Cancel</a>
        </div>
    </div>
}

@helper DisplayRecordHierarchy(RecordHierarchy record)
{
    <li>
        @record.Entity.Name: @Html.ActionLink(record.DisplayName, "Edit", new { entityName = record.Entity.Name, key = record.JoinedKeyValue })
        @if (record.SubRecordsHierarchies.Any())
        {
            <ul>
                @foreach (var subRecord in record.SubRecordsHierarchies)
                {
                    <text>@DisplayRecordHierarchy(subRecord)</text>
                }
            </ul>
        }
    </li>
}
@helper HideDeleteOption(bool collapsed)
{
    if (collapsed) { <text>data-delete-options-collapsed="true"</text> }
}
@helper DeleteHierarchyWarning(bool assumable)
{
    if (assumable)
    {
        <text>@IlaroAdminResources.AssumableCascadeDeleteWarning</text>
    }
    else
    {
        <text>@IlaroAdminResources.CascadeDeleteWarning</text>
    }
}